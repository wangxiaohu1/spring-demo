<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>ykse demo</display-name>
	
    <servlet>
		<servlet-name>spring-servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>corsFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>corsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <servlet>
	    <servlet-name>druidStatView</servlet-name>
	    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	    <init-param>
	     	 <param-name>loginUsername</param-name>
	     	 <param-value>ykse-druid</param-value>
	    </init-param>
	    <init-param>
	     	 <param-name>loginPassword</param-name>
	     	 <param-value>ykse@2016druid</param-value>
	    </init-param>
    </servlet>
    <servlet-mapping>
	    <servlet-name>druidStatView</servlet-name>
	    <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>

	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>ssoFilter</filter-name>
		<filter-class>com.alibaba.buc.sso.client.filter.SSOFilter</filter-class>

		<init-param>
			<!-- 指明接入环境, daily: 日常，online：线上 -->
			<param-name>LOGIN_ENV</param-name>
			<param-value>${mvn.build.sso.login.env}</param-value>
		</init-param>

		<init-param>
			<!-- 应用标识 -->
			<!-- 注意区分日常、线上，日常和线上的APP_CODE是不一样的 -->
			<!-- 查看APP_CODE，日常https://login-test.alibaba-inc.com/updateAppInfoList.htm，线上https://login.alibaba-inc.com/updateAppInfoList.htm -->
			<!-- 注：只有sso上的应用管理员能查看，看不到请根据应用名搜索，会显示当前管理员是谁 -->
			<param-name>APP_CODE</param-name>
			<param-value>${mvn.build.sso.app.code}</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>ssoFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>aclUrlFilter</filter-name>
		<filter-class>com.alibaba.buc.acl.client.filter.AclUrlFilter</filter-class>
		<init-param>
			<param-name>ACCESS_KEY</param-name>
			<param-value>${mvn.build.acl.access.key}</param-value>
		</init-param>
		<!-- 这个是ACL回调得到 userId 的, 请 extends DefaultAclCallbackImpl 实现 getUserId 方法 -->
		<init-param>
			<param-name>ACL_CALLBACK_CLASS</param-name>
			<param-value>cn.com.ykse.common.session.callback.DefaultAclCallback</param-value>
		</init-param>
		<!-- 不需要验的 url, 支持正则表达式 -->
		<init-param>
			<param-name>EXCLUSIONS</param-name>
			<param-value>/favicon.ico,/checkpreload.htm,/status.taobao,/static/**,/view/**,/view,/payUpload/**,/payUpload,/agent.ateye</param-value>
		</init-param>
		<!-- 只有 DEV, PRODUCT 两种 -->
		<init-param>
			<param-name>ENVIRONMENT</param-name>
			<param-value>${mvn.build.acl.env}</param-value>
		</init-param>
		<!-- 只有 HTTP, HTTP_TW, HSF 两种 -->
		<init-param>
			<param-name>CALL_MODE</param-name>
			<param-value>HSF</param-value>
		</init-param>
		<!-- 验的 url 中是否包含 ? 后的参数, 默认不包含 -->
		<init-param>
			<param-name>CONTAIN_URL_PARAMETER</param-name>
			<param-value>FALSE</param-value>
		</init-param>
		<!-- 当验权是无权限时重定向的 url, 不填默认重定向到 ACL -->
		<init-param>
			<param-name>NO_PERMISSION_REDIRECT_URL</param-name>
			<param-value>https://acl.alibaba-inc.com/apply/instance/needApply.htm</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>aclUrlFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>maieyeFilter</filter-name>
		<filter-class>cn.damai.platform.maieye.url.filter.AteyeFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>maieyeFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--用途：拦截url来统计访问数量等；-->

	<servlet>
		<servlet-name>maieye</servlet-name>
		<servlet-class>cn.damai.platform.maieye.servlet.AteyeServlet</servlet-class>
		<init-param>
			<param-name>app</param-name>
			<param-value>lark-basedata</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>maieye</servlet-name>
		<url-pattern>/agent.ateye</url-pattern>
	</servlet-mapping>
	<!--用途：方法调用，开关设置等-->
	<error-page>
		<error-code>404</error-code>
		<location>/404.html</location>
	</error-page>

</web-app>
